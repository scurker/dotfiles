#!/bin/bash

cwd="${pwd}"

DOTFILES_DIR="${HOME}/.dotfiles"
DOTFILES_GIT="git@github.com:scurker/dotfiles.git"
DOTFILES_TAR="https://github.com/scurker/dotfiles/tarball/master"

STATUS_COLOR=$(tput setaf 3)
SUCCESS_COLOR=$(tput setaf 2)
CHECKMARK="${SUCCESS_COLOR}✓${RESET}"
RESET="\e[0m"

printf "Installing dotfiles\n"

# If the dotfiles directory is missing, download it
if [[ ! -d ${DOTFILES_DIR} ]]; then
  printf "${STATUS_COLOR}Downloading dotfiles... ${CHECKMARK}${RESET}\n"
  mkdir ${DOTFILES_DIR}
  # Get the tarball
  curl -fsSLo ${HOME}/dotfiles.tar.gz ${DOTFILES_TAR}
  # Extract to the dotfiles directory
  tar -zxf ${HOME}/dotfiles.tar.gz --strip-components 1 -C ${DOTFILES_DIR}
  # Remove the tarball
  rm -rf ${HOME}/dotfiles.tar.gz
fi

cd ${DOTFILES_DIR}

source ./shell/colors
source ${DOTFILES_DIR}/lib/utils
source ${DOTFILES_DIR}/lib/brew
source ${DOTFILES_DIR}/lib/git
source ${DOTFILES_DIR}/lib/npm

# Install Homebrew
run_brew

# Initialize or sync git repo
run_git

# Install npm packages
run_npm

# Link Files
linkfiles() {

  declare -a FILES=(
    'shell/bashrc'
    'shell/bash_profile'
    'shell/inputrc'
    'git/gitignore'
    'git/gitconfig'
  )

  for file in "${FILES[@]}"
  do
    if [[ -r $file ]]; then
      target="$HOME/.$(basename $file)"
      ln -fs "$DOTFILES_DIR/$file" $target
      printf "${normal}${gray}$DOTFILES_DIR/$file ${green}→ ${yellow}$target${normal}\n"
    fi
  done

  printf "\n"

}

ask_confirmation "\nWarning: This step may overwrite your existing dotfiles! Continue?"
if is_confirmed; then
  linkfiles
  source ${HOME}/.bash_profile
else
  printf "Skipped linking dotfiles\n"
fi